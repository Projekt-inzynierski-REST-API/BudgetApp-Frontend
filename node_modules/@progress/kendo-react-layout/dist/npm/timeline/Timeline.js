"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Timeline = void 0;
var React = require("react");
var PropTypes = require("prop-types");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var TimelineHorizontal_1 = require("./TimelineHorizontal");
var TimelineVertical_1 = require("./TimelineVertical");
var Timeline = function (props) {
    var combinedProps = __assign({ alterMode: false, collapsibleEvents: true, dateFormat: 'MMM dd, yyyy' }, props);
    var collapsibleEvents = combinedProps.collapsibleEvents, transitionDuration = combinedProps.transitionDuration, className = combinedProps.className, alterMode = combinedProps.alterMode, navigatable = combinedProps.navigatable, horizontal = combinedProps.horizontal, events = combinedProps.events, dateFormat = combinedProps.dateFormat, onChange = combinedProps.onChange, onActionClick = combinedProps.onActionClick;
    var _a = React.useState(), trackAxisWidth = _a[0], setTrackAxisWidth = _a[1];
    var trackWrapRef = React.useRef(null);
    React.useEffect(function () {
        if (trackWrapRef.current) {
            setTrackAxisWidth(trackWrapRef.current.offsetWidth);
        }
    }, []);
    return (React.createElement("div", { ref: trackWrapRef, className: (0, kendo_react_common_1.classNames)('k-timeline', {
            'k-timeline-collapsible': collapsibleEvents,
            'k-timeline-vertical': !horizontal,
            'k-timeline-alternating': alterMode,
            'k-timeline-horizontal': horizontal
        }, className), style: { width: "".concat(trackAxisWidth, "px") } }, horizontal ? React.createElement(TimelineHorizontal_1.TimelineHorizontal, { navigatable: navigatable, eventsData: events, dateFormat: dateFormat, transitionDuration: transitionDuration, onActionClick: onActionClick })
        : React.createElement(TimelineVertical_1.TimelineVertical, { navigatable: navigatable, eventsData: events, dateFormat: dateFormat, alterMode: alterMode, collapsibleEvents: collapsibleEvents, transitionDuration: transitionDuration, onChange: onChange, onActionClick: onActionClick })));
};
exports.Timeline = Timeline;
exports.Timeline.propTypes = {
    className: PropTypes.string
};
